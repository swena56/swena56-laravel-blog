COPY posts (id, created_at, updated_at, title, slug, summary, content, seen, active, user_id) FROM stdin;
4	2016-05-28 03:28:42	2016-05-31 22:45:50	Laravel fundamentals	laravel-fundamentals	<p>Routes, model, controller, view</p>\r\n	<p><strong>Create New Project</strong>&nbsp;</p>\r\n\r\n<pre>\r\n<code class="language-bash">mkdir laravel-projects\r\ncd laravel-projects\r\n\r\nlaravel new fundamentals-practice-project\r\ncd fundamentals-practice-project</code></pre>\r\n\r\n<p>Take this time to look through the application structure of the project folder. &nbsp;I found it helpful to use Ranger to quickly browse through the project folder. &nbsp;Ranger is a linux commandline tool used for quickly browsing through files.</p>\r\n\r\n<p>Connecting to our postgres database requires us to make changes to the .env file in the root of our project directory. &nbsp;Change the DB_CONNECTION to pgsql and fill in the user information.</p>\r\n\r\n<p>&gt;nano .env</p>\r\n\r\n<p>DB_CONNECTION=pgsql<br />\r\nDB_HOST=127.0.0.1<br />\r\nDB_PORT=5432<br />\r\nDB_DATABASE=homestead<br />\r\nDB_USERNAME=homestead<br />\r\nDB_PASSWORD=secret</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>php artisan</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Routes</strong></p>\r\n\r\n<pre>\r\n<code class="language-php">Route::get();\r\nRoute::post();\r\nRoute::group();\r\n\r\n//Generating URLs to Named Routes \r\n</code></pre>\r\n\r\n<pre>\r\n<code class="language-bash"># how to generate a controller with php artisan\r\n\r\nphp artisan </code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Models</p>\r\n\r\n<p>Views</p>\r\n\r\n<p>Migrations</p>\r\n\r\n<p>Seeders</p>\r\n\r\n<p><strong>Questions</strong></p>\r\n\r\n<p><strong>1) How can I add tab complete to php artisan?</strong></p>\r\n	f	f	1
5	2016-05-28 03:32:34	2016-06-07 06:22:24	Reactjs	reactjs	<p>How to set up react.js in a laravel project.</p>\r\n	<p>https://github.com/talyssonoc/react-laravel</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Install v8js dependencies</strong></p>\r\n\r\n<pre>\r\nsudo apt-get install libv8-dev g++ <code>php-pear php5-dev</code></pre>\r\n\r\n<pre>\r\nsudo pecl install v8js-0.1.3</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Can not download pecl/v8js?</p>\r\n\r\n<p>Maybe i need to manually do this, by downloading directly.</p>\r\n\r\n<p>https://pecl.php.net/package/v8js</p>\r\n\r\n<p>https://github.com/phpv8/v8js/blob/master/README.Linux.md</p>\r\n\r\n<p>https://laracasts.com/discuss/channels/forge/installed-v8js</p>\r\n\r\n<p><strong>Add to php.ini</strong></p>\r\n\r\n<p><code>&quot;extension=v8js.so&quot;</code></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Install Homestead</strong></p>\r\n\r\n<p>This all could be a sign that I should just use Homestead.</p>\r\n\r\n<p>https://laravel.com/docs/5.1/homestead<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code class="language-bash">#wget https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_i686.deb\r\n\r\nwget https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.deb\r\n\r\nsudo dpkg -i vagrant_1.8.1*\r\nsudo apt-get install virtualbox\r\n\r\nvagrant box add laravel/homestead</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n	f	f	1
6	2016-05-29 18:13:03	2016-05-29 18:13:03	Plex Server on the Rasberry Pi	plex-server-on-the-rasberry-pi	<p>Setting up plex on the rasberry pi is one of the cheapest ways to create a powerful media server.</p>\r\n	<p>http://www.rasplex.com/</p>\r\n	f	f	1
8	2016-05-29 18:19:37	2016-05-29 18:19:37	Creating a Laravel Blog Site	creating-a-laravel-blog-site	<p>Setting up a blog site is a fantastic way to add order and priority to learning new concepts. &nbsp;As well as a great way to share your ideas with others.</p>\r\n	<p>https://github.com/bestmomo/laravel5-example</p>\r\n	f	f	1
9	2016-05-29 18:20:32	2016-05-29 18:20:32	Setting up secure FTP	setting-up-secure-ftp	<p>sftp</p>\r\n	<p>http://www.krizna.com/ubuntu/setup-ftp-server-on-ubuntu-14-04-vsftpd/</p>\r\n	f	f	1
10	2016-05-29 18:44:29	2016-05-29 18:51:06	Amazon Web Services Setup Webserver	amazon-web-services-setup-webserver	<p>How to set up an amazon cloud computer. &nbsp;The best part about this is that it is free.</p>\r\n	<p>https://aws.amazon.com/</p>\r\n\r\n<p>Sign in to console</p>\r\n\r\n<p>EC2</p>\r\n\r\n<p>It seems to be helpful to setup port forwarding upon setting up the machine because it gets difficult to do later.</p>\r\n	f	f	1
11	2016-05-31 22:49:54	2016-06-08 22:20:54	Laravel Folder Structure	laravel-folder-structure	<p>Learning the folder structure of projects created with Laravel. &nbsp;It is important to know where code should be placed or where generated code gets placed. On my path to discovering how Laravel works I will ask five questions about each part of the folder structure.</p>\r\n	<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls -A\r\napp        composer.json  database      .gitattributes  package.json  readme.md   storage\r\nartisan    composer.lock  .env          .gitignore      phpunit.xml   resources   tests\r\nbootstrap  config         .env.example  gulpfile.js     public        server.php  vendor\r\n</code></pre>\r\n\r\n<p>Here is a glance at a file listing for a&nbsp;freshly generated Laravel project. &nbsp;</p>\r\n\r\n<p><strong>app</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">:~/laravel-projects/fundamentals-practice-project$ ls app/\r\nConsole  Events  Exceptions  Http  Jobs  Listeners  Policies  Providers  User.php</code></pre>\r\n\r\n<p>The app directory is where most of the projects code will be placed. &nbsp;Models that are generated are placed in the application directory. &nbsp;In this example the User model is the user.php file.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>app/Console</strong>&nbsp;-&nbsp;Here is console commands are placed. &nbsp; Commands/Inspire.php Kernel.php</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;php artisan make:console</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Seems like making a&nbsp;console command would be helpful creating advanced boiler plate code for a repeative task.</p>\r\n\r\n<p><strong>app/Events -</strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<table align="left" border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>1) How are events created and queued?</p>\r\n\r\n\t\t\t<p>&nbsp; &nbsp; &nbsp;A)</p>\r\n\r\n\t\t\t<pre>\r\n<code class="language-bash">php artisan event:generate</code></pre>\r\n\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) What is an event facade?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What are the broadcast drivers Pusher and Redis used for?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) Is A broadcasted event the same as a websocket connection?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What is an event subscriber?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>6) What is a framework event?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>app/Exceptions</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) The exception handler has two methods report and render, what are they used for?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) How is BugSnag set up?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) How do I create custom HTTP error pages?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How do I set up a Log facade?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What are the different log modes supported by Laravel?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>app/Http</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls app/Http/\r\nControllers  Kernel.php  Middleware  Requests  routes.php</code></pre>\r\n\r\n<p><strong>Controllers</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px" summary="Questions">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) &nbsp;How are controllers created and routed?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) What is controller middleware?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) How do restful resource controllers work?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) What are implicit controllers used for?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) How does data injection work for a controller? &nbsp;Both for the contructor and the methods?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Kernel.php</strong></p>\r\n\r\n<p><strong>Middleware</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px" summary="Questions">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) What are some examples of middleware?&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) How do I call middleware from a controller?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) How is middleware defined and registered?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How does middleware recieve parameters?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What is terminable middleware?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Requests</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px" summary="Questions">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) &nbsp;What is the request lifecycle?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) What is an HTTP request?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What information does a request contain?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) What is a request response?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) How is a request accessed from a controller?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>routes.php</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px" summary="Questions">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) How does HTTP routing with parameters work?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) What is the difference between route groups and named routes?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What is middleware, and how is it routed?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How does route model binding work?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) How do I organize my routes file?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>app/Jobs</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) How is a job generated, and what are some examples of jobs that could be created?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) How are jobs put on to a queue?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) When would I want to create a delayed job?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How do I dispatch jobs from a request?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What are Laravel job events?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>app/Listeners</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) What is a queue listener?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) How is a daemon queue listener created, and what can I use them for?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What types of listeners are there?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How do listeners and events interact with each other?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) A real life example of a listener, and events that might follow?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>app/Polices</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1) What is the Gate facade? &nbsp;And how does it relate to laravel policies?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) How are policies created and registered?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What is a service container, and how does it relate to a policy?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) How are policies interacted with by model, blade, controllers, and helpers?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What is the difference between abilities and policies?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>app/Providers</strong></p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>1) How are service providers created and registered?</p>\r\n\r\n\t\t\t<p>&nbsp; &nbsp; &nbsp;A) A service provider has a register method. &nbsp;It is used for what?</p>\r\n\r\n\t\t\t<pre>\r\n<code class="language-bash">php artisan make:provider &lt;Name_Of_Provider&gt;</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>2) What is the boot method usered for in a provider?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>3) What is a deferred provider?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>4) When should I create a service provider? &nbsp;What is a service container?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>5) What does bootstrapped mean?</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>bootstrap</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls bootstrap/\r\napp.php  autoload.php  cache</code></pre>\r\n\r\n<p><strong>config</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">:~/laravel-projects/fundamentals-practice-project$ ls config/\r\napp.php           cache.php     filesystems.php  services.php\r\nauth.php          compile.php   mail.php         session.php\r\nbroadcasting.php  database.php  queue.php        view.php</code></pre>\r\n\r\n<p><strong>database</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls database/\r\nfactories  migrations  seeds</code></pre>\r\n\r\n<p><strong>public -&nbsp;</strong>Assets like javascript, CSS, and images belong in this directory.&nbsp;</p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls public/\r\nfavicon.ico  index.php  robots.txt  web.config</code></pre>\r\n\r\n<p><strong>resources</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls resources/\r\nassets  lang  views</code></pre>\r\n\r\n<p><strong>storage</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls storage/\r\napp  framework  logs\r\n</code></pre>\r\n\r\n<p><strong>tests</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls tests/\r\nExampleTest.php  TestCase.php</code></pre>\r\n\r\n<p><strong>vendor</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">~/laravel-projects/fundamentals-practice-project$ ls vendor/\r\nautoload.php    doctrine       laravel    nesbot         phpunit      symfony\r\nbin             fzaninotto     league     nikic          psr          vlucas\r\nclasspreloader  hamcrest       mockery    paragonie      psy\r\ncomposer        jakub-onderka  monolog    phpdocumentor  sebastian\r\ndnoegel         jeremeamia     mtdowling  phpspec        swiftmailer\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n	t	t	1
12	2016-06-01 02:28:47	2016-06-11 01:33:30	Laravel Database Migrations	laravel-database-migrations	<p>Why use migrations? &nbsp;How to create a migration to define our database? &nbsp;What is the most important thing to know about migrations?</p>\r\n	<p><strong>Migrations</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:800px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>How are migrations created?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>How are Eloquent Models created?</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;Schema::create(&#39;users&#39;, function (Blueprint $table) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;increments(&#39;id&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;name&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;title&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;age&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;address&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;city&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;state&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;zip&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;email&#39;)-&gt;unique();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;password&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;phone&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;string(&#39;company&#39;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;rememberToken();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $table-&gt;timestamps();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; });<br />\r\n&nbsp;</p>\r\n\r\n<p>Create fake Data&nbsp;</p>\r\n\r\n<p>https://packagist.org/packages/fzaninotto/faker</p>\r\n\r\n<pre>\r\n<code class="language-php">use Faker\\Factory as Faker;\r\n\r\n$faker = Faker::create();\r\n$people = $faker-&gt;name;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n	f	f	1
13	2016-06-01 04:11:02	2016-06-12 03:20:49	Laravel Project hosted on Github and Heroku	laravel-project-hosted-on-github-and-heroku	<p>This article demonstrates how to commit your Laravel project on Github and host it on Heroku. &nbsp;I will make a simple Laravel application that uses Postgres for the database. &nbsp;Lets do this!</p>\r\n	<p>Login to github, and create a new repository for your Laravel project. &nbsp;Mine will be&nbsp;https://github.com/swena56/swena56-laravel-blog</p>\r\n\r\n<p>After we create our Laravel project we will naviagte into the projects directory from terminal. &nbsp;From there we can set things up with git.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Lets quickly make a Laravel project so we can host it</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">laravel new swena56-laravel-blog\r\n\r\nnano .env  #configure the database connection information\r\n\r\nphp artisan make:auth    #we shall keep it simple and just do the user authentication boiler plate code for now</code></pre>\r\n\r\n<p><strong>Push to Github</strong></p>\r\n\r\n<p>After this step we should be able to see our project in github.</p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo apt-get install git  #make sure we have git installed on our linux machine\r\n\r\ncd swena56-laravel-blog\r\n\r\ngit config --global user.email "swena56@example.com"\r\ngit config --global user.name "Andrew Swenson"\r\ngit remote add origin https://github.com/swena56/swena56-laravel-blog.git\r\ngit remote -v\r\ngit init\r\ngit add .\r\ngit commit -m "first commit"\r\ngit push origin master</code></pre>\r\n\r\n<p><strong>Heroku</strong></p>\r\n\r\n<p>&nbsp;We will get the heroku tool kit installed, login by commandline, and then create a new heroku project. &nbsp; An alternative would be to go to the heroku webapp dashboard, and perform these actions through the web interface.</p>\r\n\r\n<p><a href="https://dashboard.heroku.com/">https://dashboard.heroku.com/</a></p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo apt-get install wget\r\nwget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh    #get the heroku tool kit for linux, this requires ruby\r\n\r\nheroku login\r\nheroku create #heroku apps to see a list of the apps\r\nheroku apps:rename swena56-laravel-blog\r\n\r\n#our git hub project needs a Procfile to tell heroku to lauch an apache web server\r\necho web: vendor/bin/heroku-php-apache2 public/ &gt; Procfile\r\ngit add .\r\ngit commit -m "Procfile for heroku"\r\ngit push heroku master\r\n\r\nheroku config\r\nheroku config:set APP_KEY=$(php artisan key:generate --show)\r\nheroku config:set GITHUB_USERNAME=swena56\r\nheroku config:get DATABASE_URL\r\n\r\nheroku addons:create heroku-postgresql:hobby-dev\r\n\r\n#lets make sure the webapp is running and open it in the browser\r\nheroku ps:scale web=1    #make sure the app is running\r\nheroku open              #opens the webpage up in the browser</code></pre>\r\n\r\n<p><strong>Change the&nbsp;config/database.php to connect to the heroku DB instead of a local database.</strong></p>\r\n\r\n<p>Lets make some changes to our project so we can&nbsp;connect to the heroku postgres database. &nbsp;My resource is&nbsp;https://devcenter.heroku.com/articles/getting-started-with-php#provision-a-database</p>\r\n\r\n<pre>\r\n<code class="language-bash">#parse the Database url into variables before the return array\r\n$url = parse_url(getenv("DATABASE_URL"));\r\n$host = $url["host"];\r\n$username = $url["user"];\r\n$password = $url["pass"];\r\n$database = substr($url["path"], 1);\r\n\r\n#set the default\r\n'default' =&gt; env('DB_CONNECTION','pgsql'),\r\n\r\n#set the pgsql connection data to those variables\r\n 'pgsql' =&gt; array(\r\n        'driver'   =&gt; 'pgsql',\r\n        'host'     =&gt; $host,\r\n        'database' =&gt; $database,\r\n        'username' =&gt; $username,\r\n        'password' =&gt; $password,\r\n        'charset'  =&gt; 'utf8',\r\n        'prefix'   =&gt; '',\r\n        'schema'   =&gt; 'public',\r\n   ),</code></pre>\r\n\r\n<p>Get these changes commited and now we can migrate.</p>\r\n\r\n<pre>\r\n<code class="language-bash">git add .\r\ngit commit -m "Convert to use Heroku PostgreSQL database"\r\ngit push heroku master\r\nheroku run php /app/artisan migrate\r\n\r\nheroku open   #lets check it out again</code></pre>\r\n\r\n<p>We can check out what is in the heroku postgres database right now by running this command.</p>\r\n\r\n<pre>\r\n<code class="language-bash">heroku pg:psql</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n	t	t	1
1	2016-05-28 02:15:49	2016-06-08 22:48:48	Setup Enviroment For Laravel	setup-enviroment-for-laravel	<p>I will discuss how to set up Laravel on a Ubuntu Linux machine. &nbsp;I will be using a free tier&nbsp;Amazon Web Services Instance, but this is not necessary if you are working locally. &nbsp;</p>\r\n\r\n<p><a href="https://aws.amazon.com/">https://aws.amazon.com/</a></p>\r\n\r\n<p>&nbsp;</p>\r\n	<p>I have grown a liking for the Laravel Framework for how easy it is to setup. &nbsp;Instead of manually setting everything up another option would be to use the Homestead Laravel Virtual Machine with vagrant.</p>\r\n\r\n<p><strong>Setup the machine</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">#make sure we are up to date\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n#install dependencies\r\nsudo apt-get install git-core curl php5-cli php5-json openssl php5-mcrypt php5-pgsql\r\n</code></pre>\r\n\r\n<p><strong>Install Composer</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo curl -sS https://getcomposer.org/installer | php\r\nsudo mv composer.phar /usr/local/bin/composer\r\necho "composer will now work globally"</code></pre>\r\n\r\n<p><strong>Install Laravel</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">composer global require "laravel/installer"\r\n\r\nCOMPOSER_BIN_LOCATION="~/.composer/vendor/bin"  #this might be different depending on the OS\r\n\r\necho "export PATH=$PATH:$COMPOSER_BIN_LOCATION" &gt;&gt; ~/.bashrc\r\nsource ~/.bashrc</code></pre>\r\n\r\n<p><br />\r\n<strong>Set up Postgres Database</strong></p>\r\n\r\n<p>This script written below installs postgres. &nbsp;With the postgres linux user is used for creating other users. &nbsp;And in this situation below we will also create a database. &nbsp;I like setting the database name with the name of the database&nbsp;user for convience.</p>\r\n\r\n<pre>\r\n<code class="language-bash">#install posgres\r\nsudo apt-get install postgresql postgresql-contrib\r\n\r\nUSER="$(whoami)"\r\n\r\n#login as the user postgres so we can create a role for the current user\r\nsudo -i -u postgres\r\n\r\n#create new postgres user, consider checking out the man pages for createuser\r\ncreateuser --interactive $USER\r\n\r\n#create a new postgres database\r\ncreatedb $USER\r\n\r\npsql\r\n</code></pre>\r\n\r\n<p><strong>Change the password for postgres user</strong></p>\r\n\r\n<pre>\r\n<code>ALTER USER userNameHere WITH PASSWORD 'desired_password_here';</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Now we can begin creating some projects, and review the Laravel Documentation. &nbsp;A good place to start is laravel quickstart.</p>\r\n\r\n<p><a href="https://laravel.com/docs/5.1">https://laravel.com/docs/5.1</a></p>\r\n\r\n<p><a href="https://laravel.com/docs/5.1/quickstart">https://laravel.com/docs/5.1/quickstart</a></p>\r\n\r\n<p><strong>Tools of Usefulness</strong></p>\r\n\r\n<p><a href="https://swena56.slack.com/messages/@slackbot/">https://slack.com/</a></p>\r\n\r\n<p><a href="https://trello.com/">https://trello.com/</a></p>\r\n\r\n<p><strong>Resources</strong></p>\r\n\r\n<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04">https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04</a></p>\r\n	t	t	1
14	2016-06-08 22:28:54	2016-06-08 23:12:45	Handling Transactions with Stripe	handling-transactions-with-stripe	<p>I will discuss how to set up a Laravel website that handles transactions with stripe. &nbsp;</p>\r\n\r\n<p>-Sell some kind of product</p>\r\n\r\n<p>-Shopping cart</p>\r\n\r\n<p>&nbsp;</p>\r\n	<p><strong>Stripe</strong></p>\r\n\r\n<p>Signup for a stripe account at Stripes offical webpage&nbsp;<a href="https://stripe.com/">https://stripe.com/</a>. &nbsp;Once logged in to the site&nbsp;locate the API keys under your account settings. &nbsp;We will start off by collecting the test keys, an&nbsp;example of what they look like are shown below.</p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:500px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Test Secret Key:</td>\r\n\t\t\t<td>sk_test_bZz8VNY5ixpLtwPKdlSQz6f0&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Test Publishable Key</td>\r\n\t\t\t<td>pk_test_Ey5Z2ZMWCadRLi0wOkoARDmP&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Laravel&nbsp;</strong></p>\r\n\r\n<p>Lets create a new project, and set it up so it can make stripe transactions. &nbsp;We will add laravel cashier to the composer.json. &nbsp;If a different version of the stripe SDK needs to be used consult the laravel billing link at the bottom of the page.</p>\r\n\r\n<pre>\r\n<code class="language-bash">laravel new store-example-using-stripe\r\ncd store-example-using-stripe\r\n\r\n#add laravel/cashier to composer.json, the example below I am using sed to insert the text at line 13\r\nsed -i '13i\\        "laravel/cashier": "~5.0",' composer.json \r\n\r\ncomposer update\r\n\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Registering the service provider in config\\app.php</p>\r\n\r\n<p>Laravel\\Cashier\\CashierServiceProvider</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Resources</strong></p>\r\n\r\n<p><strong><a href="https://laravel.com/docs/5.1/billing">https://laravel.com/docs/5.1/billing</a></strong></p>\r\n\r\n<p><strong><a href="https://github.com/codingo-me/laravel-stripe-checkout-form">https://github.com/codingo-me/laravel-stripe-checkout-form</a></strong></p>\r\n\r\n<p><strong><a href="https://github.com/JulienTant/demo-laravel-stripe">https://github.com/JulienTant/demo-laravel-stripe</a></strong></p>\r\n\r\n<p><strong>https://github.com/abodeo/laravel-stripe</strong></p>\r\n\r\n<p><strong>http://davidmyers.name/post/using-stripe-with-laravel</strong></p>\r\n	f	f	1
15	2016-06-09 02:56:17	2016-06-09 02:56:17	blade	blade	<p>Outline of information about blade</p>\r\n	<p><strong>Questions</strong></p>\r\n\r\n<p>How does blade work?</p>\r\n\r\n<p>A blade layout?</p>\r\n\r\n<p>Driven by template inheritance and seections.</p>\r\n\r\n<p>Blade files end with .blade.php</p>\r\n\r\n<p>What is a blade layout?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code class="language-php">&lt;html&gt;\r\n    &lt;body&gt;\r\n        @section('sidebar')\r\n            This is the master sidebar.\r\n        @show\r\n\r\n        &lt;div class="container"&gt;\r\n            @yield('content')\r\n        &lt;/div&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>extends</p>\r\n\r\n<p>@extends(&#39;layouts.master&#39;)</p>\r\n\r\n<p>@parent</p>\r\n\r\n<p>@yield</p>\r\n\r\n<p><strong>Send Data to Controller</strong></p>\r\n\r\n<pre>\r\n<code class="language-php">$variableName = '---Variable Data---';\r\nview('folderName.viewName')-&gt;with('variableName',$variableName);</code></pre>\r\n\r\n<p><strong>Echo Data&nbsp;</strong>- When the variable might not be set.</p>\r\n\r\n<pre>\r\n<code class="language-bash">{{{ isset($name) ? $name : 'Default' }}}\r\n\r\nequivalent\r\n\r\n{{{ $name or 'Default' }}}</code></pre>\r\n\r\n<p><strong>Resources</strong></p>\r\n\r\n<p><a href="https://laravel.com/docs/4.2/templates#other-blade-control-structures">https://laravel.com/docs/4.2/templates#other-blade-control-structures</a></p>\r\n	f	f	1
16	2016-06-10 22:29:11	2016-06-10 22:29:11	Python	python	<p>I will be writing a python application with Python2, and WingIDE.&nbsp; How to get a project up and running on Github, with the intension to continously add to your python project. &nbsp;I usually write python on linux, but today I will be using Windows.</p>\r\n	<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Setting up the Enviroment</strong></p>\r\n\r\n<p><strong><a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></strong></p>\r\n\r\n<p><a href="http://wingware.com/downloads">http://wingware.com/downloads</a></p>\r\n\r\n<p>setting python directory in windows enviroment</p>\r\n\r\n<p><strong>Python Resources</strong></p>\r\n\r\n<p><a href="https://www.python.org/doc/">https://www.python.org/doc/</a></p>\r\n\r\n<p><a href="https://www.hackerrank.com/domains/python/py-introduction">https://www.hackerrank.com/domains/python/py-introduction</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Need to know - survivial skills</strong></p>\r\n\r\n<p><strong>-</strong>Works based on spacing</p>\r\n\r\n<p>raw_input()</p>\r\n\r\n<p>var_dump</p>\r\n	f	f	1
\.

